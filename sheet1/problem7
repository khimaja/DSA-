//coinchange




//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
   public:
  
  
  long long int solve(int ind, int coins[], int t, int N, vector<vector<long>> &dp){
      
      if(ind==0){
          return t%coins[ind]==0;
      }
      
      if(dp[ind][t]!=-1)return dp[ind][t];
      
      long long int not_take = solve(ind-1,coins,t,N,dp);
      long long int take = 0;
      if(coins[ind]<=t)take = solve(ind, coins, t - coins[ind], N, dp);
      
      return dp[ind][t] = not_take + take;
  }
  
  
    long long int count(int coins[], int n, int sum) {

        // vector<vector<long>> dp(N, vector<long> (sum+1, -1));
        // return solve(N-1, coins, sum, N, dp);
        
        long long int t[n+1][sum+1];
        for(int i=0;i<=n;i++) {
            t[i][0]=1;
        }
        for(int i=1;i<=sum;i++) {
            t[0][i]=0;
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=sum;j++){
                if(coins[i-1]<=j){
                    t[i][j]=t[i][j-coins[i-1]]+t[i-1][j];
                }
                else{
                    t[i][j]=t[i-1][j];
                }
            }
        }
        return t[n][sum];
      
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int sum, N;
        cin >> sum >> N;
        int coins[N];
        for (int i = 0; i < N; i++) cin >> coins[i];
        Solution ob;
        cout << ob.count(coins, N, sum) << endl;
    }

    return 0;
}


// } Driver Code Ends
